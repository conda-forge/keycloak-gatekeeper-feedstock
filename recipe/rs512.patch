diff --git a/vendor/github.com/gambol99/go-oidc/jose/sig_rsa.go b/vendor/github.com/gambol99/go-oidc/jose/sig_rsa.go
index 004e45d..b688351 100755
--- a/vendor/github.com/gambol99/go-oidc/jose/sig_rsa.go
+++ b/vendor/github.com/gambol99/go-oidc/jose/sig_rsa.go
@@ -19,7 +19,14 @@ type SignerRSA struct {
 }
 
 func NewVerifierRSA(jwk JWK) (*VerifierRSA, error) {
-	if jwk.Alg != "" && jwk.Alg != "RS256" {
+    var hash = nil
+	if jwk.Alg == "" && jwk.Alg == "RS256" {
+        hash = crypto.SHA256
+    } else if jwk.Alg == "RS384" {
+        hash = crypto.SHA384
+    } else if jwk.Alg == "RS512" {
+        hash = crypto.SHA512
+    } else {
 		return nil, fmt.Errorf("unsupported key algorithm %q", jwk.Alg)
 	}
 
@@ -29,7 +36,7 @@ func NewVerifierRSA(jwk JWK) (*VerifierRSA, error) {
 			N: jwk.Modulus,
 			E: jwk.Exponent,
 		},
-		Hash: crypto.SHA256,
+		Hash: hash,
 	}
 
 	return &v, nil
@@ -51,7 +58,13 @@ func (v *VerifierRSA) ID() string {
 }
 
 func (v *VerifierRSA) Alg() string {
-	return "RS256"
+    if v.Hash == crypto.SHA512 {
+        return "RS512"
+    } else if v.Hash == crypto.SHA384 {
+        return "RS384"
+    } else {
+        return "RS256"
+    }
 }
 
 func (v *VerifierRSA) Verify(sig []byte, data []byte) error {
